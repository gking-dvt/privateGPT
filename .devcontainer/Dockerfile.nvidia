FROM python:3.11-bookworm

## Add your own requirements.txt if desired and uncomment the two lines below
# COPY ./requirements.txt .
# RUN pip install -r requirements.txt

## Install CUDA Toolkit (Includes drivers and SDK needed for building llama-cpp-python with CUDA support)
# See https://developer.nvidia.com/cuda-downloads
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y software-properties-common net-tools && \
    wget https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    add-apt-repository contrib && \
    apt-get update && \
    apt-get -y install cuda-toolkit-12-3

## Install llama-cpp-python with CUDA Support (and jupyterlab)
RUN CUDACXX=/usr/local/cuda-12/bin/nvcc \
    CMAKE_ARGS="-DLLAMA_CUBLAS=on -DCMAKE_CUDA_ARCHITECTURES=all-major" \
    FORCE_CMAKE=1 \
    pip install jupyterlab llama-cpp-python --force-reinstall --upgrade --no-cache-dir --verbose

WORKDIR /workspace

EXPOSE 8080

RUN export POETRY_VIRTUALENVS_IN_PROJECT=true \
    export PYTHONUNBUFFERED=1 \
    export PORT=8080 \
    \
    PATH="/root/.local/bin:$PATH" \
    PATH=".venv/bin/:$PATH" \
    \
    pip install --upgrade pip \
    \
    # Install poetry
    pip install pipx \
    python3 -m pipx ensurepath \
    pipx install poetry \
    \
    poetry install --with local \
    poetry install --with ui \
    poetry run python scripts/setup

CP
## Run jupyterlab on container startup
#CMD ["jupyter", "lab", "--ip", "0.0.0.0", "--port", "8888", "--NotebookApp.token=''", "--NotebookApp.password=''", "--no-browser", "--allow-root"]

